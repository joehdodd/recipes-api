{"version":3,"sources":["../../src/models/recipe.js"],"names":["recipe","sequelize","DataTypes","Recipe","define","title","type","STRING","description","ingredients","ARRAY","instructions","associate","belongsTo","models","User","findById","id","findOne","where","findByUserId","userId","findAll","recipes"],"mappings":";;;;;;;;AAAA,IAAMA,SAAS,SAATA,MAAS,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACvC,MAAMC,SAASF,UAAUG,MAAV,CAAiB,QAAjB,EAA2B;AACxCC,WAAO,EAAEC,MAAMJ,UAAUK,MAAlB,EADiC;AAExCC,iBAAa,EAAEF,MAAMJ,UAAUK,MAAlB,EAF2B;AAGxCE,iBAAa,EAAEH,MAAMJ,UAAUQ,KAAV,CAAgBR,UAAUK,MAA1B,CAAR,EAH2B;AAIxCI,kBAAc,EAAEL,MAAMJ,UAAUQ,KAAV,CAAgBR,UAAUK,MAA1B,CAAR;AAJ0B,GAA3B,CAAf;;AAOAJ,SAAOS,SAAP,GAAmB,kBAAU;AAC3BT,WAAOU,SAAP,CAAiBC,OAAOC,IAAxB;AACD,GAFD;;AAIAZ,SAAOa,QAAP;AAAA,uEAAkB,iBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGd,OAAOe,OAAP,CAAe;AAChCC,uBAAO,EAAEF,MAAF;AADyB,eAAf,CADH;;AAAA;AACZjB,oBADY;AAAA,+CAKTA,MALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAAA;AAAA;AAAA;AAAA;;AAQAG,SAAOiB,YAAP;AAAA,wEAAsB,kBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACElB,OAAOmB,OAAP,CAAe;AACnCH,uBAAO,EAAEE,cAAF;AAD4B,eAAf,CADF;;AAAA;AACdE,qBADc;AAAA,gDAIbA,OAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAOpB,MAAP;AACD,CA5BD;;kBA8BeH,M","file":"recipe.js","sourcesContent":["const recipe = (sequelize, DataTypes) => {\n  const Recipe = sequelize.define('recipe', {\n    title: { type: DataTypes.STRING },\n    description: { type: DataTypes.STRING },\n    ingredients: { type: DataTypes.ARRAY(DataTypes.STRING) },\n    instructions: { type: DataTypes.ARRAY(DataTypes.STRING) }\n  });\n\n  Recipe.associate = models => {\n    Recipe.belongsTo(models.User);\n  };\n\n  Recipe.findById = async id => {\n    let recipe = await Recipe.findOne({\n      where: { id }\n    });\n\n    return recipe;\n  };\n\n  Recipe.findByUserId = async userId => {\n    const recipes = await Recipe.findAll({\n      where: { userId }\n    });\n    return recipes;\n  };\n\n  return Recipe;\n};\n\nexport default recipe;\n"]}