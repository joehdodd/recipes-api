{"version":3,"sources":["../../src/models/index.js"],"names":["sequelize","Sequelize","process","env","DATABASE_URL","dialect","dialectOptions","ssl","logging","models","User","import","Recipe","Object","keys","forEach","key","associate"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAMA,YAAY,IAAIC,mBAAJ,CAAcC,QAAQC,GAAR,CAAYC,YAA1B,EAAwC;AACxDC,WAAS,UAD+C;AAExDC,kBAAgB;AACdC,SAAK;AADS,GAFwC;AAKxDC,WAAS;AAL+C,CAAxC,CAAlB;;AAQA,IAAMC,SAAS;AACbC,QAAMV,UAAUW,MAAV,CAAiB,QAAjB,CADO;AAEbC,UAAQZ,UAAUW,MAAV,CAAiB,UAAjB;AAFK,CAAf;;AAKAE,OAAOC,IAAP,CAAYL,MAAZ,EAAoBM,OAApB,CAA4B,eAAO;AACjC,MAAI,eAAeN,OAAOO,GAAP,CAAnB,EAAgC;AAC9BP,WAAOO,GAAP,EAAYC,SAAZ,CAAsBR,MAAtB;AACD;AACF,CAJD;;QAMST,S,GAAAA,S;kBAEMS,M","file":"index.js","sourcesContent":["import Sequelize from 'sequelize';\n\nconst sequelize = new Sequelize(process.env.DATABASE_URL, {\n  dialect: 'postgres',\n  dialectOptions: {\n    ssl: true\n  },\n  logging: false\n});\n\nconst models = {\n  User: sequelize.import('./user'),\n  Recipe: sequelize.import('./recipe')\n};\n\nObject.keys(models).forEach(key => {\n  if ('associate' in models[key]) {\n    models[key].associate(models);\n  }\n});\n\nexport { sequelize };\n\nexport default models;\n"]}